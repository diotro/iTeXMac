#!/bin/sh -f
# this is iTM2_Engine_XeTeX for iTeXMac2 2.0
# © 2006 jlaurens@users.sourceforge.net
# This is a XeTeX 3.14159-2.1-0.88 (Web2C 7.5.2) wrapper
iTM2_XeTeX_Engine_Version=1.0
iTM2TeXEngineUsage()
{
iTM2_USAGE="Welcome to $(basename "$0") version ${iTM2_XeTeX_Engine_Version}
This is iTeXMac2 built in script to wrap the XeTeX engine
($(which xetex))
© 2006 jlaurens@users.sourceforge.net
Usage: $(basename "$0") with environment variables
	TWSMaster: the main input file (actually \"${TWSMaster}\")
	TWSProject: the project file, if any, full path, unused
	TWSWrapper: the wrapper file, if any, full path, unused
	iTM2_USE_output_directory: 1 or void (common)
	iTM2_output_directory: the common output directory
	iTM2_XeTeX_ini: 1 or void, be initex, for dumping formats
	iTM2_XeTeX_mltex: 1 or void, enable MLTeX extensions such as \charsubdef
	iTM2_XeTeX_enc: 1 or void,
	iTM2_XeTeX_MoreArgument:
	iTM2_XeTeX_mktex: 1 or void,
	iTM2_XeTeX_USE_output_directory: 1 or void
	iTM2_XeTeX_output_directory:
	iTM2_XeTeX_fmt: = FMTNAME, use the value instead of program name or a %& line
	iTM2_XeTeX_parse_first_line: 1 or void, parse of the first line of the input file
	iTM2_XeTeX_USE_progname: 1 or void,
	iTM2_XeTeX_progname: = STRING, set program (and fmt) name to STRING
	iTM2_XeTeX_USE_jobname: 1 or void,
	iTM2_XeTeX_jobname: = STRING, set the job name to STRING
	iTM2_XeTeX_shell_escape: 1 or void, enable \write18{SHELL COMMAND}
	iTM2_XeTeX_src_specials: 1 or void, insert source specials into the DVI file
	iTM2_XeTeX_src_specials_where_no_cr: 1 or void,
	iTM2_XeTeX_src_specials_where_no_display: 1 or void,
	iTM2_XeTeX_src_specials_where_no_hbox: 1 or void,
	iTM2_XeTeX_src_specials_where_no_parent: 1 or void,
	iTM2_XeTeX_src_specials_where_no_par: 1 or void,
	iTM2_XeTeX_src_specials_where_no_math: 1 or void,
	iTM2_XeTeX_src_specials_where_no_vbox: 1 or void,
	iTM2_XeTeX_USE_output_comment: 1 or void,
	iTM2_XeTeX_output_comment:
	iTM2_XeTeX_USE_translate_file: 1 or void,
	iTM2_XeTeX_translate_file := TCXNAME, use the TCX file TCXNAME
	iTM2_XeTeX_PARSE_translate_file: 1 or void,
	iTM2_XeTeX_recorder: 1 or void, enable filename recorder
	iTM2_XeTeX_file_line_error: 1 or void, print file:line:error style messages
	iTM2_XeTeX_halt_on_error: 1 or void,
	iTM2_XeTeX_interaction: batchmode/nonstopmode/scrollmode/errorstopmode, set interaction mode
	iTM2_XeTeX_kpathsea_debug:
	iTM2_XeTeX_MoreArgument: more arguments"
"$iTM2_CMD_Notify" echo "$iTM2_USAGE"
}
"$iTM2_CMD_Notify" comment "Welcome to $(basename "$0") version ${iTM2_XeTeX_Engine_Version}
This is iTeXMac2 built in script to wrap the XeTeX engine
© 2006 jlaurens@users.sourceforge.net"
if [ "${iTM2_Debug:-0}" != "0" ]
then
	"$iTM2_CMD_Notify" start comment
	"$iTM2_CMD_Notify" echo "The $0 specific environment is:"
	for iTM2VAR in ${!iTM2_XeTeX_*}
	do
		echo "${iTM2VAR} is: ${!iTM2VAR}"
	done
	"$iTM2_CMD_Notify" stop comment
fi

iTM2_XeTeX_Engine="xetex"
iTM2_XeTeX_EnginePath="$(which "${iTM2_XeTeX_Engine}")"
if ! [ -x "${iTM2_XeTeX_EnginePath}" ]
then
	"$iTM2_CMD_Notify" error "Unknown command ${iTM2_XeTeX_Engine}."
	iTM2TeXEngineUsage
	exit 1
fi
iTM2_XeTeX_Arguments=""
if [ "${iTM2_XeTeX_ini:-0}" != "0" ]
then
	iTM2_XeTeX_Arguments="-ini"
	if [ "${iTM2_XeTeX_enc:-0}" != "0" ]
	then
		iTM2_XeTeX_Arguments="${iTM2_XeTeX_Arguments} -enc"
	fi
	if [ "${iTM2_XeTeX_mltex:-0}" != "0" ]
	then
		iTM2_XeTeX_Arguments="${iTM2_XeTeX_Arguments} -mltex"
	fi
fi
if [ "${iTM2_XeTeX_USE_jobname:-0}" != "0" ] && [ ${#iTM2_XeTeX_jobname} -ne 0 ]
then
	iTM2_XeTeX_Arguments="${iTM2_XeTeX_Arguments} -jobname \"${iTM2_XeTeX_jobname}\""
fi
if [ "${iTM2_XeTeX_USE_output_directory:-0}" != "0" ] && [ ${#iTM2_XeTeX_output_directory} -ne 0 ]
then
	iTM2_XeTeX_Arguments="${iTM2_XeTeX_Arguments} -output-directory \"${iTM2_XeTeX_output_directory}\""
elif [ "${iTM2_USE_output_directory:-0}" != "0" ] && [ ${#iTM2_output_directory} -ne 0 ]
then
	iTM2_XeTeX_Arguments="${iTM2_XeTeX_Arguments} -output-directory \"${iTM2_output_directory}\""
fi
if [ "${iTM2_XeTeX_parse_first_line:-0}" != "0" ]
then
	iTM2_XeTeX_Arguments="${iTM2_XeTeX_Arguments} -parse-first-line"
	if [ "${iTM2_XeTeX_USE_translate_file:-0}" != "0" ] && [ ${#iTM2_XeTeX_translate_file} -gt 0 ]
	then
		if [ "${iTM2_XeTeX_PARSE_translate_file:-0}" != "0" ]
		then
			iTM2_XeTeX_Arguments="${iTM2_XeTeX_Arguments} -default-translate-file"
		else
			iTM2_XeTeX_Arguments="${iTM2_XeTeX_Arguments} -translate-file"
		fi
		iTM2_XeTeX_Arguments="${iTM2_XeTeX_Arguments} \"${iTM2_XeTeX_translate_file}\""
	fi
	if [ "${iTM2_XeTeX_USE_progname:-0}" != "0" ] && [ ${#iTM2_XeTeX_progname} -ne 0 ]
	then
		iTM2_XeTeX_Arguments="${iTM2_XeTeX_Arguments} -progname \"${iTM2_XeTeX_progname}\""
	fi
else
	iTM2_XeTeX_fmt="$(echo ${iTM2_XeTeX_fmt} | tr [:upper:] [:lower:])"
	if [ "${iTM2_XeTeX_USE_progname:-0}" != "0" ] && [ ${#iTM2_XeTeX_progname} -ne 0 ]
	then
		iTM2_XeTeX_Arguments="${iTM2_XeTeX_Arguments} -progname \"${iTM2_XeTeX_progname}\""
		if [ ${#iTM2_XeTeX_fmt} -gt 0 ]
		then
			if [ "${iTM2_XeTeX_fmt}" == "plain" ]
			then
				iTM2_XeTeX_fmt="xetex"
			elif [ "${iTM2_XeTeX_fmt:0:2}" != "xe" ]
			then
				iTM2_XeTeX_fmt="xe${iTM2_XeTeX_fmt}"
			fi
			iTM2_XeTeX_Arguments="${iTM2_XeTeX_Arguments} -fmt ${iTM2_XeTeX_fmt}"
		fi
	elif [ "${iTM2_XeTeX_fmt}" == "plain" ]
	then
		iTM2_XeTeX_Arguments="${iTM2_XeTeX_Arguments} -progname xetex"
	elif [ ${#iTM2_XeTeX_fmt} -gt 0 ]
	then
		if [ "${iTM2_XeTeX_fmt:0:2}" != "xe" ]
		then
			iTM2_XeTeX_fmt="xe${iTM2_XeTeX_fmt}"
		fi
		iTM2_XeTeX_Arguments="${iTM2_XeTeX_Arguments} -progname ${iTM2_XeTeX_fmt}"
	fi
	if [ "${iTM2_XeTeX_USE_translate_file:-0}" != "0" ] && [ ${#iTM2_XeTeX_translate_file} -gt 0 ]
	then
		iTM2_XeTeX_Arguments="${iTM2_XeTeX_Arguments} -translate-file \"${iTM2_XeTeX_translate_file}\""
	fi
fi
if [ "${iTM2_XeTeX_recorder:-0}" != "0" ]
then
	iTM2_XeTeX_Arguments="${iTM2_XeTeX_Arguments} -recorder"
fi
if [ "${iTM2_XeTeX_file_line_error:-0}" != "0" ]
then
	iTM2_XeTeX_Arguments="${iTM2_XeTeX_Arguments} -file-line-error"
fi
if [ "${iTM2_XeTeX_halt_on_error:-0}" != "0" ]
then
	iTM2_XeTeX_Arguments="${iTM2_XeTeX_Arguments} -halt-on-error"
fi
if [ "${iTM2_XeTeX_kpathsea_debug:-0}" != "0" ]
then
	"$iTM2_CMD_Notify" error "-kpathsea-debug no yet supported."
fi
if [ ${#iTM2_XeTeX_interaction} -gt 0 ]
then
	iTM2_XeTeX_Arguments="${iTM2_XeTeX_Arguments} -interaction ${iTM2_XeTeX_interaction}"
fi
if [ "${iTM2_XeTeX_USE_MoreArgument:-0}" != "0" ] && [ ${#iTM2_XeTeX_MoreArgument} -ne 0 ]
then
	iTM2_XeTeX_Arguments="${iTM2_XeTeX_Arguments} \"${iTM2_XeTeX_MoreArgument}\""
fi
# the file name part
TWSMasterBase="$(basename "${TWSMaster}")"
EXTENSION="${TWSMasterBase##*.}"
if [ ${#EXTENSION} -ne 0 ]
then
	EXTENSION="$(echo "${EXTENSION}" | tr [:upper:] [:lower:])"
	if [ "${EXTENSION}" != "tex" ] && [ "${EXTENSION}" != "dtx" ] && [ "${EXTENSION}" != "ins" ] && [ "${EXTENSION}" != "ltx" ]
	then
		TWSMaster="${TWSMaster%.*}.tex"
	fi
fi
if ! [ -r "${TWSMaster}" ]
then
	"$iTM2_CMD_Notify" error "No readable file at ${TWSMaster} (in $(pwd))."
	iTM2TeXEngineUsage
	exit 2
fi
"$iTM2_CMD_Notify" comment "TWSMaster is: ${TWSMaster}"
if [ "${iTM2_XeTeX_USE_jobname:-0}" != "0" ] && [ ${#iTM2_XeTeX_jobname} -ne 0 ]
then
	iTM2_XeTeX_Arguments="${iTM2_XeTeX_Arguments} -jobname \"${iTM2_XeTeX_jobname}\""
	OUTPUT="${iTM2_XeTeX_jobname}"
else
	OUTPUT="${TWSMasterBase%.*}"
fi
# working directory?
if [ ${#TWSProject} -gt 0 ]
then
	iTM2_PWD="$(dirname "${TWSProject}")"
	iTM2_PWD_Real="${iTM2_PWD##*Projects.put_aside}"
	iTM2_PWD_Real="${iTM2_PWD_Real%/*.texd*}"
	if [ ${#iTM2_PWD_Real} -lt ${#iTM2_PWD} ]
	then
		if [ ${#TEXINPUTS} -gt 0 ]
		then
			export TEXINPUTS=".:${iTM2_PWD_Real}:${TEXINPUTS}:"
		else
			export TEXINPUTS=".:${iTM2_PWD_Real}:"
		fi
		if [ ${#iTM2_PWD} -gt 0 ] && ! [ -r "${iTM2_PWD}/${TWSMasterBase}" ]
		then
			ln -sf "{TWSMaster}" "${iTM2_PWD}"
		fi
	fi
else
	iTM2_PWD="$(dirname "${TWSMaster}")"
	iTM2_PWD_Real="${iTM2_PWD}"
fi
pushd "${iTM2_PWD}"
"$iTM2_CMD_Notify" comment "Performing  ${iTM2_XeTeX_EnginePath} ${iTM2_XeTeX_Arguments} \"${TWSMasterBase}\""
"${iTM2_XeTeX_EnginePath}" ${iTM2_XeTeX_Arguments} "${TWSMasterBase}"
iTM2_Status="$?"
if [ "${iTM2_Status}" != "0" ]
then
#	popd// bug in xetex
	"$iTM2_CMD_Notify" error "$0 FAILED(${iTM2_Status})."
	"$iTM2_CMD_Notify" error "WARNING: this might be a xetex bug, if there is no error"
#	exit ${iTM2_Status}
fi
OUTPUT="${OUTPUT%.*}.pdf"
"$iTM2_CMD_Notify" comment "OUTPUT: ${OUTPUT}"
if [ -s "${OUTPUT}" ]
then	
	if [ ${#iTM2_PWD_Real} -lt ${#iTM2_PWD} ] && [ -w "${iTM2_PWD_Real}" ]
	then
		mv -f "${OUTPUT}" "${iTM2_PWD_Real}"
"$iTM2_CMD_Notify" comment "! moved 1 OUTPUT: ${OUTPUT}"
	fi
"$iTM2_CMD_Notify" comment "! moved 2 OUTPUT: ${OUTPUT}"
	"${iTM2_TemporaryDirectory}/bin/iTeXMac2" update -file "${iTM2_PWD_Real}/${OUTPUT}" -project "${TWSProject}"
else
"$iTM2_CMD_Notify" comment "! moved 3 OUTPUT: ${OUTPUT}"
	"${iTM2_TemporaryDirectory}/bin/iTeXMac2" markerror -file "${iTM2_PWD_Real}/${OUTPUT}" -project "${TWSProject}"
fi
if [ ${#iTM2_Debug} -gt 0 ]
then
	"$iTM2_CMD_Notify" comment "$0 complete."
fi
popd
exit ${iTM2_Status}

