#!/usr/bin/env bash
# this is iTM2_Engine_TeX for iTeXMac2 2.0
# © 2006 jlaurens AT users DOT sourceforge DOT net
# This is a TeX 3.141592 (Web2C 7.5.3) wrapper
iTM2_TeX_Engine_Version=1.1
iTM2TeXEngineUsage()
{
iTM2_USAGE="Welcome to $(basename "$0") version ${iTM2_TeX_Engine_Version}
This is iTeXMac2 built in script to wrap the tex engine
($(which tex))
© 2006 jlaurens AT users DOT sourceforge DOT net
Usage: $(basename "$0") with environment variables
	TWSMaster: the main input file (actually \"${TWSMaster}\")
	TWSProject: the project file, if any, full path, unused
	TWSWrapper: the wrapper file, if any, full path, unused
	iTM2_USE_output_directory: 1 or void (common)
	iTM2_output_directory: the common output directory
	iTM2_TeX_ini: 1 or void, be initex, for dumping formats
	iTM2_TeX_mltex: 1 or void, enable MLTeX extensions such as \charsubdef
	iTM2_TeX_enc: 1 or void,
	iTM2_TeX_MoreArgument:
	iTM2_TeX_mktex: 1 or void,
	iTM2_TeX_USE_output_directory: 1 or void
	iTM2_TeX_output_directory:
	iTM2_TeX_fmt: = FMTNAME, use the value instead of program name or a %& line
	iTM2_TeX_parse_first_line: 1 or void, parse of the first line of the input file
	iTM2_TeX_USE_progname: 1 or void,
	iTM2_TeX_progname: = STRING, set program (and fmt) name to STRING
	iTM2_TeX_USE_jobname: 1 or void,
	iTM2_TeX_jobname: = STRING, set the job name to STRING
	iTM2_AllTeX_shell_escape: 1 or void, enable \write18{SHELL COMMAND}
	iTM2_TeX_src_specials: 1 or void, insert source specials into the DVI file
	iTM2_TeX_src_specials_where_no_cr: 1 or void,
	iTM2_TeX_src_specials_where_no_display: 1 or void,
	iTM2_TeX_src_specials_where_no_hbox: 1 or void,
	iTM2_TeX_src_specials_where_no_parent: 1 or void,
	iTM2_TeX_src_specials_where_no_par: 1 or void,
	iTM2_TeX_src_specials_where_no_math: 1 or void,
	iTM2_TeX_src_specials_where_no_vbox: 1 or void,
	iTM2_TeX_USE_output_comment: 1 or void,
	iTM2_TeX_output_comment:
	iTM2_TeX_USE_translate_file: 1 or void,
	iTM2_TeX_translate_file := TCXNAME, use the TCX file TCXNAME
	iTM2_TeX_PARSE_translate_file: 1 or void,
	iTM2_TeX_recorder: 1 or void, enable filename recorder
	iTM2_TeX_file_line_error: 1 or void, print file:line:error style messages
	iTM2_TeX_halt_on_error: 1 or void,
	iTM2_TeX_interaction: batchmode/nonstopmode/scrollmode/errorstopmode, set interaction mode
	iTM2_TeX_kpathsea_debug:
	iTM2_TeX_MoreArgument: more arguments"
	echo "$iTM2_USAGE"
}
"${iTM2_CMD_Notify}" notify comment "Welcome to $(basename "$0") version ${iTM2_TeX_Engine_Version}
This is iTeXMac2 built in script to wrap the tex engine
© 2006 jlaurens AT users DOT sourceforge DOT net"
if [ "${iTM2_Debug}" != "0" ]
then
	"${iTM2_CMD_Notify}" notify start comment
	"${iTM2_CMD_Notify}" notify echo "The $0 specific environment is:"
	for iTM2VAR in ${!iTM2_TeX_*}
	do
		"${iTM2_CMD_Notify}" notify echo "${iTM2VAR} is: ${!iTM2VAR}"
	done
	"${iTM2_CMD_Notify}" notify stop comment
fi
# the engine part

iTM2_TeX_Engine="tex"
iTM2_TeX_EnginePath="$(which "${iTM2_TeX_Engine}")"
if ! [ -x "${iTM2_TeX_EnginePath}" ]
then
	"${iTM2_CMD_Notify}" notify error "Unknown command ${iTM2_TeX_Engine}."
	iTM2TeXEngineUsage
	exit 1
fi
iTM2_TeX_Arguments=""
if [ "${iTM2_TeX_ini:-0}" != "0" ]
then
	iTM2_TeX_Arguments="-ini"
	if [ "${iTM2_TeX_enc:-0}" != "0" ]
	then
		iTM2_TeX_Arguments="${iTM2_TeX_Arguments} -enc"
	fi
	if [ "${iTM2_TeX_mltex:-0}" != "0" ]
	then
		iTM2_TeX_Arguments="${iTM2_TeX_Arguments} -mltex"
	fi
fi
if [ "${iTM2_TeX_USE_jobname:-0}" != "0" ] && [ ${#iTM2_TeX_jobname} -ne 0 ]
then
	iTM2_TeX_Arguments="${iTM2_TeX_Arguments} -jobname \"${iTM2_TeX_jobname}\""
fi
if [ "${iTM2_TeX_USE_output_directory:-0}" != "0" ] && [ ${#iTM2_TeX_output_directory} -ne 0 ]
then
	iTM2_TeX_Arguments="${iTM2_TeX_Arguments} -output-directory \"${iTM2_TeX_output_directory}\""
elif [ "${iTM2_USE_output_directory:-0}" != "0" ] && [ ${#iTM2_output_directory} -ne 0 ]
then
	iTM2_TeX_Arguments="${iTM2_TeX_Arguments} -output-directory \"${iTM2_output_directory}\""
fi
iTM2_TeX_fmt="`echo ${iTM2_TeX_fmt} | tr [:upper:] [:lower:]`"
if [ "${iTM2_TeX_parse_first_line:-0}" != "0" ]
then
	iTM2_TeX_Arguments="${iTM2_TeX_Arguments} -parse-first-line"
	if [ "${iTM2_TeX_USE_translate_file:-0}" != "0" ] && [ ${#iTM2_TeX_translate_file} -gt 0 ]
	then
		if [ "${iTM2_TeX_PARSE_translate_file:-0}" != "0" ]
		then
			iTM2_TeX_Arguments="${iTM2_TeX_Arguments} -default-translate-file"
		else
			iTM2_TeX_Arguments="${iTM2_TeX_Arguments} -translate-file"
		fi
		iTM2_TeX_Arguments="${iTM2_TeX_Arguments} \"${iTM2_TeX_translate_file}\""
	fi
	if [ "${iTM2_TeX_USE_progname:-0}" != "0" ] && [ ${#iTM2_TeX_progname} -ne 0 ]
	then
		iTM2_TeX_Arguments="${iTM2_TeX_Arguments} -progname ${iTM2_TeX_progname}"
	fi
else
	if [ "${iTM2_TeX_USE_progname:-0}" != "0" ] && [ ${#iTM2_TeX_progname} -ne 0 ]
	then
		iTM2_TeX_Arguments="${iTM2_TeX_Arguments} -progname ${iTM2_TeX_progname}"
		if [ ${#iTM2_TeX_fmt} -gt 0 ]
		then
			iTM2_TeX_Arguments="${iTM2_TeX_Arguments} -fmt ${iTM2_TeX_fmt}"
		fi
	elif [ "${#iTM2_TeX_fmt}" == "plain" ]
	then
		iTM2_TeX_Arguments="${iTM2_TeX_Arguments} -progname tex"
	elif [ ${#iTM2_TeX_fmt} -gt 0 ]
	then
		iTM2_TeX_Arguments="${iTM2_TeX_Arguments} -progname ${iTM2_TeX_fmt}"
#bug found by P. D'ancona?
	fi
	if [ "${iTM2_TeX_USE_translate_file:-0}" != "0" ] && [ ${#iTM2_TeX_translate_file} -gt 0 ]
	then
		iTM2_TeX_Arguments="${iTM2_TeX_Arguments} -translate-file \"${iTM2_TeX_translate_file}\""
	fi
fi
if [ "${iTM2_TeX_recorder:-0}" != "0" ]
then
	iTM2_TeX_Arguments="${iTM2_TeX_Arguments} -recorder"
fi
if [ "${iTM2_TeX_file_line_error:-0}" != "0" ]
then
	iTM2_TeX_Arguments="${iTM2_TeX_Arguments} -file-line-error"
fi
if [ "${iTM2_TeX_halt_on_error:-0}" != "0" ]
then
	iTM2_TeX_Arguments="${iTM2_TeX_Arguments} -halt-on-error"
fi
if [ "${iTM2_TeX_kpathsea_debug:-0}" != "0" ]
then
	"${iTM2_CMD_Notify}" notify error "-kpathsea-debug no yet supported"
fi
if [ "${iTM2_TeX_interaction:-0}" != "0" ]
then
	iTM2_TeX_Arguments="${iTM2_TeX_Arguments} -interaction ${iTM2_TeX_interaction}"
fi
if [ "${iTM2_TeX_USE_MoreArgument:-0}" != "0" ] && [ ${#iTM2_TeX_MoreArgument} -ne 0 ]
then
	iTM2_TeX_Arguments="${iTM2_TeX_Arguments} \"${iTM2_TeX_MoreArgument}\""
fi
if [ "${iTM2_TeX_src_specials:-0}" != "0" ]
then
	iTM2_SRC_SPECIALS=""
	if [ "${iTM2_TeX_src_specials_where_no_cr:-0}" == "0" ]
	then
		if [ ${#iTM2_SRC_SPECIALS} -gt 0 ]
		then
			iTM2_SRC_SPECIALS="${iTM2_SRC_SPECIALS},cr"
		else
			iTM2_SRC_SPECIALS="cr"
		fi
	fi
	if [ "${iTM2_TeX_src_specials_where_no_par:-0}" == "0" ]
	then
		if [ ${#iTM2_SRC_SPECIALS} -gt 0 ]
		then
			iTM2_SRC_SPECIALS="${iTM2_SRC_SPECIALS},par"
		else
			iTM2_SRC_SPECIALS="par"
		fi
	fi
	if [ "${iTM2_TeX_src_specials_where_no_display:-0}" == "0" ]
	then
		if [ ${#iTM2_SRC_SPECIALS} -gt 0 ]
		then
			iTM2_SRC_SPECIALS="${iTM2_SRC_SPECIALS},display"
		else
			iTM2_SRC_SPECIALS="display"
		fi
	fi
	if [ "${iTM2_TeX_src_specials_where_no_math:-0}" == "0" ]
	then
		if [ ${#iTM2_SRC_SPECIALS} -gt 0 ]
		then
			iTM2_SRC_SPECIALS="${iTM2_SRC_SPECIALS},math"
		else
			iTM2_SRC_SPECIALS="math"
		fi
	fi
	if [ "${iTM2_TeX_src_specials_where_no_hbox:-0}" == "0" ]
	then
		if [ ${#iTM2_SRC_SPECIALS} -gt 0 ]
		then
			iTM2_SRC_SPECIALS="${iTM2_SRC_SPECIALS},hbox"
		else
			iTM2_SRC_SPECIALS="hbox"
		fi
	fi
	if [ "${iTM2_TeX_src_specials_where_no_vbox:-0}" == "0" ]
	then
		if [ ${#iTM2_SRC_SPECIALS} -gt 0 ]
		then
			iTM2_SRC_SPECIALS="${iTM2_SRC_SPECIALS},vbox"
		else
			iTM2_SRC_SPECIALS="vbox"
		fi
	fi
# unsupported
#	if [ "${iTM2_TeX_src_specials_where_no_parent:-0}" == "0" ]
#	then
#		if [ ${#iTM2_SRC_SPECIALS} -gt 0 ]
#		then
#			iTM2_SRC_SPECIALS="${iTM2_SRC_SPECIALS},parent"
#		else
#			iTM2_SRC_SPECIALS="parent"
#		fi
#	fi
	if [ ${#iTM2_SRC_SPECIALS} -gt 0 ]
	then
		iTM2_TeX_Arguments="${iTM2_TeX_Arguments} -src-specials=${iTM2_SRC_SPECIALS}"
	else
		iTM2_TeX_Arguments="${iTM2_TeX_Arguments} -src-specials"
	fi
fi
if [ "${iTM2_AllTeX_shell_escape:-0}" != "0" ]
then
	iTM2_TeX_Arguments="${iTM2_TeX_Arguments} -shell-escape"
else
	iTM2_TeX_Arguments="${iTM2_TeX_Arguments} -no-shell-escape"
fi
# the file name part
TWSMasterBase="$(basename "${TWSMaster}")"
EXTENSION="${TWSMasterBase##*.}"
if [ ${#EXTENSION} -ne 0 ]
then
	EXTENSION="$(echo "${EXTENSION}" | tr [:upper:] [:lower:])"
	if [ "${EXTENSION}" != "tex" ] && [ "${EXTENSION}" != "dtx" ] && [ "${EXTENSION}" != "ins" ] && [ "${EXTENSION}" != "ltx" ]
	then
		TWSMaster="${TWSMaster%.*}.tex"
	fi
fi
if ! [ -r "${TWSMaster}" ]
then
	"${iTM2_CMD_Notify}" notify error "No readable file at ${TWSMaster} (in $(pwd))."
	iTM2TeXEngineUsage
	exit 2
fi
if [ "${iTM2_TeX_USE_jobname:-0}" != "0" ] && [ ${#iTM2_TeX_jobname} -ne 0 ]
then
	iTM2_TeX_Arguments="${iTM2_TeX_Arguments} -jobname \"${iTM2_TeX_jobname}\""
	OUTPUT="${iTM2_TeX_jobname}"
else
	OUTPUT="${TWSMasterBase%.*}"
fi
pushd "${iTM2_PWD}"
iTM2_DOT_PDFSYNC="${TWSMasterBase%.*}.pdfsync"
if [ -f "${iTM2_DOT_PDFSYNC}" ]
then
	rm -f "${iTM2_DOT_PDFSYNC}"
fi
if [ "${iTM2_TeX_fmt:0:2}" == "fr" ]
then
	iTM2_Preparator="$(which FrenchPro)"
	if [ ${#iTM2_Preparator} -eq 0 ]
	then
		iTeXMac2 error -project "${TWSProject}" -reason "FrenchPro is not available, install FrenchPro or change the project settings."
	fi
fi
if [ ${#iTM2_Preparator} -gt 0 ]
then
	/bin/sh -c "\"${iTM2_Preparator}\" \"${iTM2_TeX_EnginePath}\" ${iTM2_TeX_Arguments} \"${TWSMasterBase}\""
else
	/bin/sh -c "\"${iTM2_TeX_EnginePath}\" ${iTM2_TeX_Arguments} \"${TWSMasterBase}\""
fi
"${iTM2_CMD_Notify}" notify comment "Performing ${iTM2_Preparator} ${iTM2_TeX_EnginePath} ${iTM2_TeX_Arguments} \"${TARGET}\""
"${iTM2_TeX_EnginePath}" ${iTM2_TeX_Arguments} "${TWSMasterBase}"
iTM2_Status="$?"
if [ "${iTM2_Status}" != "0" ]
then
	popd
	"${iTM2_CMD_Notify}" notify error "$0 FAILED(${iTM2_Status})."
	exit ${iTM2_Status}
fi
PDFOUTPUT="${OUTPUT%.*}.pdf"
if [ -L "${PDFOUTPUT}" ]
then	
	rm -f "${PDFOUTPUT}"
fi
iTM2_Command_Compile --master "${iTM2_PWD}/${OUTPUT%.*}" --switch dvi
iTM2_Status="$?"
if [ "${iTM2ExportOutput:-0}" != "0" ]
then
	OUTPUT="${OUTPUT%.*}.ps"
	if [ -s "${OUTPUT}" ]
	then	
		if [ ${#iTM2_PWD_Real} -lt ${#iTM2_PWD} ] && [ -w "${iTM2_PWD_Real}" ]
		then
			mv -f "${OUTPUT}" "${iTM2_PWD_Real}"
		fi
	else
		iTeXMac2 markerror -file "${iTM2_PWD_Real}/${OUTPUT}" -project "${TWSProject}"
	fi
fi
if [ -s "${PDFOUTPUT}" ]
then	
	if [ ${#iTM2_PWD_Real} -lt ${#iTM2_PWD} ] && [ -w "${iTM2_PWD_Real}" ]
	then
		mv -f "${PDFOUTPUT}" "${iTM2_PWD_Real}"
	fi
	iTeXMac2 update -file "${iTM2_PWD_Real}/${PDFOUTPUT}" -project "${TWSProject}"
else
	iTeXMac2 markerror -file "${iTM2_PWD_Real}/${PDFOUTPUT}" -project "${TWSProject}"
	OUTPUT="${OUTPUT%.*}.aux"
	if [ -s "${OUTPUT}" ]
	then
		rm -f "${OUTPUT}"
	fi
	OUTPUT="${OUTPUT%.*}.out"
	if [ -s "${OUTPUT}" ]
	then
		rm -f "${OUTPUT}"
	fi
fi
OUTPUT="${OUTPUT%.*}.log"
if [ -s "${OUTPUT}" ]
then	
	iTeXMac2 log -file "${iTM2_PWD}/${OUTPUT}" -project "${TWSProject}" -dont-order-front
fi
if [ "${iTM2_Status}" != "0" ]
then
	"${iTM2_CMD_Notify}" notify error "$0 FAILED(${iTM2_Status})."
	popd
	exit ${iTM2_Status}
elif [ "${iTM2_Debug}" != "0" ]
then
	"${iTM2_CMD_Notify}" notify comment "$0 complete."
fi
popd
exit
