#!/usr/bin/env bash
# this is iTM2_Engine_PDFTeX for iTeXMac2 2.0
# © 2006 jlaurens AT users DOT sourceforge DOT net
# This is a pdfeTeX 3.141592-1.20a-2.2 (Web2C 7.5.3) wrapper
iTM2_PDFTeX_Engine_Version=1.1
iTM2PDFTeXEngineUsage()
{
iTM2_Usage="Welcome to $(basename "$0") version ${iTM2_PDFTeX_Engine_Version}
This is iTeXMac2 built in script to wrap the pdftex engine
($(which pdftex))
© 2006 jlaurens AT users DOT sourceforge DOT net
Usage: $(basename "$0") with environment variables
	TWSMaster: the main input file (actually \"${TWSMaster}\")
	TWSProject: the project file, if any, full path, unused
	TWSWrapper: the wrapper file, if any, full path, unused
	iTM2_Continuous_Compile: 1 or void
	iTM2_USE_output_directory: 1 or void (common)
	iTM2_output_directory: the common output directory
	iTM2_PDFTeX_ini: 1 or void, be initex, for dumping formats
	iTM2_PDFTeX_mltex: 1 or void, enable MLTeX extensions such as \charsubdef
	iTM2_PDFTeX_enc: 1 or void,
	iTM2_PDFTeX_MoreArgument:
	iTM2_PDFTeX_mktex: 1 or void,
	iTM2_PDFTeX_USE_output_directory: 1 or void
	iTM2_PDFTeX_output_directory:
	iTM2_PDFTeX_output_format: \"pdf\" or \"dvi\"
	iTM2_PDFTeX_fmt: = FMTNAME, use the value instead of program name or a %& line
	iTM2_PDFTeX_parse_first_line: 1 or void, parse of the first line of the input file
	iTM2_PDFTeX_USE_progname: 1 or void,
	iTM2_PDFTeX_progname: = STRING, set program (and fmt) name to STRING
	iTM2_PDFTeX_USE_jobname: 1 or void,
	iTM2_PDFTeX_jobname: = STRING, set the job name to STRING
	iTM2_AllTeX_shell_escape: 1 or void, enable \write18{SHELL COMMAND}
	iTM2_PDFTeX_PDFSYNC: 1 or void,
	iTM2_PDFTeX_src_specials: 1 or void, insert source specials into the DVI file
	iTM2_PDFTeX_src_specials_where_no_cr: 1 or void,
	iTM2_PDFTeX_src_specials_where_no_display: 1 or void,
	iTM2_PDFTeX_src_specials_where_no_hbox: 1 or void,
	iTM2_PDFTeX_src_specials_where_no_parent: 1 or void,
	iTM2_PDFTeX_src_specials_where_no_par: 1 or void,
	iTM2_PDFTeX_src_specials_where_no_math: 1 or void,
	iTM2_PDFTeX_src_specials_where_no_vbox: 1 or void,
	iTM2_PDFTeX_USE_output_comment: 1 or void,
	iTM2_PDFTeX_output_comment:
	iTM2_PDFTeX_USE_translate_file: 1 or void,
	iTM2_PDFTeX_translate_file : = TCXNAME, use the TCX file TCXNAME
	iTM2_PDFTeX_PARSE_translate_file: 1 or void,
	iTM2_PDFTeX_recorder: 1 or void, enable filename recorder
	iTM2_PDFTeX_file_line_error: 1 or void, print file:line:error style messages
	iTM2_PDFTeX_halt_on_error: 1 or void,
	iTM2_PDFTeX_interaction: batchmode/nonstopmode/scrollmode/errorstopmode, set interaction mode
	iTM2_PDFTeX_kpathsea_debug: 1 or void
	iTM2_PDFTeX_MoreArgument: more arguments"
	echo "$iTM2_Usage"
}
"${iTM2_CMD_Notify}" notify comment "Welcome to $(basename "$0") version ${iTM2_PDFTeX_Engine_Version}
This is iTeXMac2 built in script to wrap the pdftex engine at
$(which pdftex)
© 2006 jlaurens AT users DOT sourceforge DOT net"
if [ "${iTM2_Debug}" != "0" ]
then
	"${iTM2_CMD_Notify}" notify start comment
	"${iTM2_CMD_Notify}" notify echo "The $0 specific environment is:"
	for iTM2VAR in ${!iTM2_PDFTeX_*}
	do
		"${iTM2_CMD_Notify}" notify echo "${iTM2VAR} is: ${!iTM2VAR}"
	done
	"${iTM2_CMD_Notify}" notify stop comment
fi
# the engine part
iTM2_PDFTeX_Engine="pdftex"
iTM2_PDFTeX_EnginePath="$(which "${iTM2_PDFTeX_Engine}")"
if ! [ -x "${iTM2_PDFTeX_EnginePath}" ]
then
	"${iTM2_CMD_Notify}" notify error "Unknown command ${iTM2_PDFTeX_Engine}."
	iTM2PDFTeXEngineUsage
	exit 1
fi
iTM2_PDFTeX_Arguments=""
if [ "${iTM2_PDFTeX_ini:-0}" != "0" ]
then
	iTM2_PDFTeX_Arguments="-ini"
	if [ "${iTM2_PDFTeX_enc:-0}" != "0" ]
	then
		iTM2_PDFTeX_Arguments="${iTM2_PDFTeX_Arguments} -enc"
	fi
	if [ "${iTM2_PDFTeX_mltex:-0}" != "0" ]
	then
		iTM2_PDFTeX_Arguments="${iTM2_PDFTeX_Arguments} -mltex"
	fi
	if [ "${iTM2_PDFTeX_output_format:-pdf}" == "dvi" ]
	then
		iTM2_PDFTeX_Arguments="${iTM2_PDFTeX_Arguments} -output-format dvi"
	else
		iTM2_PDFTeX_Arguments="${iTM2_PDFTeX_Arguments} -output-format pdf"
	fi
else
	if [ "${iTM2_PDFTeX_output_format:-pdf}" == "dvi" ]
	then
		iTM2_PDFTeX_Arguments="${iTM2_PDFTeX_Arguments} -output-format ${iTM2_PDFTeX_output_format:-pdf}"
		if [ "${iTM2_PDFTeX_USE_output_comment:-0}" != "0" ] && [ ${#iTM2_PDFTeX_output_comment} -ne 0 ]
		then
			iTM2_PDFTeX_Arguments="${iTM2_PDFTeX_Arguments} -output-comment \"${iTM2_PDFTeX_output_comment}\""
		fi
		if [ "${iTM2_PDFTeX_src_specials:-0}" != "0" ]
		then
			iTM2_SRC_SPECIALS=""
			if [ "${iTM2_PDFTeX_src_specials_no_cr:-0}" == "0" ]
			then
				if [ ${#iTM2_SRC_SPECIALS} -gt 0 ]
				then
					iTM2_SRC_SPECIALS="${iTM2_SRC_SPECIALS},cr"
				else
					iTM2_SRC_SPECIALS="cr"
				fi
			fi
			if [ "${iTM2_PDFTeX_src_specials_no_par:-0}" == "0" ]
			then
				if [ ${#iTM2_SRC_SPECIALS} -gt 0 ]
				then
					iTM2_SRC_SPECIALS="${iTM2_SRC_SPECIALS},par"
				else
					iTM2_SRC_SPECIALS="par"
				fi
			fi
			if [ "${iTM2_PDFTeX_src_specials_no_display:-0}" == "0" ]
			then
				if [ ${#iTM2_SRC_SPECIALS} -gt 0 ]
				then
					iTM2_SRC_SPECIALS="${iTM2_SRC_SPECIALS},display"
				else
					iTM2_SRC_SPECIALS="display"
				fi
			fi
			if [ "${iTM2_PDFTeX_src_specials_no_math:-0}" == "0" ]
			then
				if [ ${#iTM2_SRC_SPECIALS} -gt 0 ]
				then
					iTM2_SRC_SPECIALS="${iTM2_SRC_SPECIALS},math"
				else
					iTM2_SRC_SPECIALS="math"
				fi
			fi
			if [ "${iTM2_PDFTeX_src_specials_no_hbox:-0}" == "0" ]
			then
				if [ ${#iTM2_SRC_SPECIALS} -gt 0 ]
				then
					iTM2_SRC_SPECIALS="${iTM2_SRC_SPECIALS},hbox"
				else
					iTM2_SRC_SPECIALS="hbox"
				fi
			fi
			if [ "${iTM2_PDFTeX_src_specials_no_vbox:-0}" == "0" ]
			then
				if [ ${#iTM2_SRC_SPECIALS} -gt 0 ]
				then
					iTM2_SRC_SPECIALS="${iTM2_SRC_SPECIALS},vbox"
				else
					iTM2_SRC_SPECIALS="vbox"
				fi
			fi
#			if [ "${iTM2_PDFTeX_src_specials_no_parent:-0}" == "0" ]
#			then
#				if [ ${#iTM2_SRC_SPECIALS} -gt 0 ]
#				then
#					iTM2_SRC_SPECIALS="${iTM2_SRC_SPECIALS},parent"
#				else
#					iTM2_SRC_SPECIALS="parent"
#				fi
#			fi
			if [ ${#iTM2_SRC_SPECIALS} -gt 0 ]
			then
				iTM2_PDFTeX_Arguments="${iTM2_PDFTeX_Arguments} -src-specials=${iTM2_SRC_SPECIALS}"
			else
				iTM2_PDFTeX_Arguments="${iTM2_PDFTeX_Arguments} -src-specials"
			fi
		fi
	else
		iTM2_PDFTeX_Arguments="${iTM2_PDFTeX_Arguments} -output-format pdf"
		if [ "${iTM2_PDFTeX_PDFSYNC:-0}" != "0" ]
		then
			"${iTM2_CMD_Notify}" notify error "PDFSYNC no yet supported"
		fi
	fi
fi
if [ "${iTM2_PDFTeX_USE_output_directory:-0}" != "0" ] && [ ${#iTM2_PDFTeX_output_directory} -ne 0 ]
then
	iTM2_PDFTeX_Arguments="${iTM2_PDFTeX_Arguments} -output-directory \"${iTM2_PDFTeX_output_directory}\""
elif [ "${iTM2_USE_output_directory:-0}" != "0" ] && [ ${#iTM2_output_directory} -ne 0 ]
then
	iTM2_PDFTeX_Arguments="${iTM2_PDFTeX_Arguments} -output-directory \"${iTM2_output_directory}\""
fi
iTM2_PDFTeX_fmt="$(echo ${iTM2_PDFTeX_fmt} | tr [:upper:] [:lower:])"
if [ "${iTM2_PDFTeX_parse_first_line:-0}" != "0" ]
then
	iTM2_PDFTeX_Arguments="${iTM2_PDFTeX_Arguments} -parse-first-line"
	if [ "${iTM2_PDFTeX_USE_translate_file:-0}" != "0" ] && [ ${#iTM2_PDFTeX_translate_file} -gt 0 ]
	then
		if [ "${iTM2_PDFTeX_PARSE_translate_file:-0}" != "0" ]
		then
			iTM2_PDFTeX_Arguments="${iTM2_PDFTeX_Arguments} -default-translate-file"
		else
			iTM2_PDFTeX_Arguments="${iTM2_PDFTeX_Arguments} -translate-file"
		fi
		iTM2_PDFTeX_Arguments="${iTM2_PDFTeX_Arguments} \"${iTM2_PDFTeX_translate_file}\""
	fi
	if [ "${iTM2_PDFTeX_USE_progname:-0}" != "0" ] && [ ${#iTM2_PDFTeX_progname} -ne 0 ]
	then
		iTM2_PDFTeX_Arguments="${iTM2_PDFTeX_Arguments} -progname ${iTM2_PDFTeX_progname}"
	fi
else
	if [ "${iTM2_PDFTeX_USE_progname:-0}" != "0" ] && [ ${#iTM2_PDFTeX_progname} -ne 0 ]
	then
		iTM2_PDFTeX_Arguments="${iTM2_PDFTeX_Arguments} -progname ${iTM2_PDFTeX_progname}"
		if [ "${iTM2_PDFTeX_fmt}" == "plain" ]
		then
			iTM2_PDFTeX_Arguments="${iTM2_PDFTeX_Arguments} -fmt pdftex"
		elif [ ${#iTM2_PDFTeX_fmt} -gt 0 ]
		then
			if [ "${iTM2_PDFTeX_fmt:0:3}" != "pdf" ]
			then
				iTM2_PDFTeX_pdffmt="pdf${iTM2_PDFTeX_fmt}"
				if [ "$(kpsewhich "${iTM2_PDFTeX_pdffmt}.fmt")" != "" ]
				then
					iTM2_PDFTeX_fmt="${iTM2_PDFTeX_pdffmt}"
				fi
			fi
			iTM2_PDFTeX_Arguments="${iTM2_PDFTeX_Arguments} -fmt ${iTM2_PDFTeX_fmt}"
		fi
	elif [ "${iTM2_PDFTeX_fmt}" == "plain" ]
	then
		iTM2_PDFTeX_Arguments="${iTM2_PDFTeX_Arguments} -progname pdftex"
	elif [ ${#iTM2_PDFTeX_fmt} -gt 0 ]
	then
		if [ "${iTM2_PDFTeX_fmt:0:3}" != "pdf" ]
		then
			iTM2_PDFTeX_pdffmt="pdf${iTM2_PDFTeX_fmt}"
			if [ "$(kpsewhich "${iTM2_PDFTeX_pdffmt}.fmt")" != "" ]
			then
				iTM2_PDFTeX_fmt="${iTM2_PDFTeX_pdffmt}"
			fi
		fi
		iTM2_PDFTeX_Arguments="${iTM2_PDFTeX_Arguments} -progname ${iTM2_PDFTeX_fmt}"
	fi
	if [ "${iTM2_PDFTeX_USE_translate_file:-0}" != "0" ] && [ ${#iTM2_PDFTeX_translate_file} -gt 0 ]
	then
		iTM2_PDFTeX_Arguments="${iTM2_PDFTeX_Arguments} -translate-file \"${iTM2_PDFTeX_translate_file}\""
	fi
fi
if [ "${iTM2_PDFTeX_recorder:-0}" != "0" ]
then
	iTM2_PDFTeX_Arguments="${iTM2_PDFTeX_Arguments} -recorder"
fi
if [ "${iTM2_PDFTeX_file_line_error:-0}" != "0" ]
then
	iTM2_PDFTeX_Arguments="${iTM2_PDFTeX_Arguments} -file-line-error"
fi
if [ "${iTM2_PDFTeX_halt_on_error:-0}" != "0" ]
then
	iTM2_PDFTeX_Arguments="${iTM2_PDFTeX_Arguments} -halt-on-error"
elif [ "${iTM2_ContinuousCompile:-0}" != "0" ]
then
	iTM2_PDFTeX_Arguments="${iTM2_PDFTeX_Arguments} -halt-on-error"
fi
if [ "${iTM2_PDFTeX_kpathsea_debug:-0}" != "0" ]
then
	"${iTM2_CMD_Notify}" notify error "-kpathsea-debug no yet supported."
fi
if [ "${iTM2_PDFTeX_interaction:-0}" != "0" ] && [ "${iTM2_ContinuousCompile:-0}" == "0" ]
then
	iTM2_PDFTeX_Arguments="${iTM2_PDFTeX_Arguments} -interaction ${iTM2_PDFTeX_interaction}"
fi
if [ "${iTM2_PDFTeX_USE_MoreArgument:-0}" != "0" ] && [ ${#iTM2_PDFTeX_MoreArgument} -ne 0 ]
then
	iTM2_PDFTeX_Arguments="${iTM2_PDFTeX_Arguments} ${iTM2_PDFTeX_MoreArgument}"
fi
if [ "${iTM2_AllTeX_shell_escape:-0}" != "0" ]
then
	iTM2_PDFTeX_Arguments="${iTM2_PDFTeX_Arguments} -shell-escape"
else
	iTM2_PDFTeX_Arguments="${iTM2_PDFTeX_Arguments} -no-shell-escape"
fi
# the file name part
TWSMasterBase="$(basename "${TWSMaster}")"
iTeXMac2 notify warning "EXISTS? $(kpsewhich "${TWSMasterBase}")"
EXTENSION="${TWSMasterBase##*.}"
if [ ${#EXTENSION} -ne 0 ]
then
	EXTENSION="$(echo "${EXTENSION}" | tr [:upper:] [:lower:])"
	if [ "${EXTENSION}" != "tex" ] && [ "${EXTENSION}" != "dtx" ] && [ "${EXTENSION}" != "ins" ] && [ "${EXTENSION}" != "ltx" ]
	then
		TWSMaster="${TWSMaster%.*}.tex"
	fi
fi
if ! [ -r "${TWSMaster}" ]
then
	"${iTM2_CMD_Notify}" notify error "No readable file at ${TWSMaster} (in $(pwd))."
	iTM2PDFTeXEngineUsage
	exit 2
fi
"${iTM2_CMD_Notify}" notify comment "TWSMaster is: ${TWSMaster}"
if [ "${iTM2_PDFTeX_USE_jobname:-0}" != "0" ] && [ ${#iTM2_PDFTeX_jobname} -ne 0 ]
then
	iTM2_PDFTeX_Arguments="${iTM2_PDFTeX_Arguments} -jobname \"${iTM2_PDFTeX_jobname}\""
	OUTPUT="${iTM2_PDFTeX_jobname}"
else
	OUTPUT="${TWSMasterBase%.*}"
fi
pushd "${iTM2_PWD}"
iTM2_DOT_PDFSYNC="${TWSMasterBase%.*}.pdfsync"
if [ -f "${iTM2_DOT_PDFSYNC}" ]
then
	rm -f "${iTM2_DOT_PDFSYNC}"
fi
PDFOUTPUT="${OUTPUT%.*}.pdf"
if [ -L "${PDFOUTPUT}" ]
then	
	rm -f "${PDFOUTPUT}"
fi
if [ "${iTM2_PDFTeX_fmt:0:2}" == "fr" ]
then
	iTM2_Preparator="$(/bin/zsh -c "which FrenchPro")"
	if ! [ -x "${iTM2_Preparator}" ]
	then
		iTeXMac2 error -project "${TWSProject}" -reason "FrenchPro is not available, install FrenchPro or change the project settings."
		iTM2_Preparator=""
	fi
fi
"${iTM2_CMD_Notify}" notify comment "Performing ${iTM2_Preparator} ${iTM2_PDFTeX_EnginePath} ${iTM2_PDFTeX_Arguments} \"${TWSMasterBase}\""
if [ ${#iTM2_Preparator} -gt 0 ]
then
	/bin/sh -c "\"${iTM2_Preparator}\" \"${iTM2_PDFTeX_EnginePath}\" ${iTM2_PDFTeX_Arguments} \"${TWSMasterBase}\""
else
	/bin/sh -c "\"${iTM2_PDFTeX_EnginePath}\" ${iTM2_PDFTeX_Arguments} \"${TWSMasterBase}\""
fi
iTM2_Status="$?"
if [ "${iTM2_Status}" != "0" ]
then
	popd
	"${iTM2_CMD_Notify}" notify error "$0 FAILED(${iTM2_Status})."
	exit ${iTM2_Status}
fi
if [ "${iTM2_PDFTeX_output_format:-pdf}" == "dvi" ] # no external viewer supported...
then
	"${iTM2_CMD_Notify}" notify comment "Swicthing to a dvi to ps filter for ${iTM2_PWD}/${OUTPUT%.*}"
	iTM2_Command_Compile --master "${iTM2_PWD}/${OUTPUT%.*}" --switch dvi
fi
if [ -s "${PDFOUTPUT}" ]
then	
	if [ ${#iTM2_PWD_Real} -lt ${#iTM2_PWD} ] && [ -w "${iTM2_PWD_Real}" ]
	then
		mv -f "${PDFOUTPUT}" "${iTM2_PWD_Real}"
	fi
	iTeXMac2 update -file "${iTM2_PWD_Real}/${PDFOUTPUT}" -project "${TWSProject}"
else
	iTeXMac2 markerror -file "${iTM2_PWD_Real}/${PDFOUTPUT}" -project "${TWSProject}"
	OUTPUT="${OUTPUT%.*}.aux"
	if [ -s "${OUTPUT}" ]
	then
		rm -f "${OUTPUT}"
	fi
	OUTPUT="${OUTPUT%.*}.out"
	if [ -s "${OUTPUT}" ]
	then
		rm -f "${OUTPUT}"
	fi
fi
OUTPUT="${OUTPUT%.*}.log"
if [ -s "${OUTPUT}" ]
then	
	iTeXMac2 log -file "${iTM2_PWD}/${OUTPUT}" -project "${TWSProject}" -dont-order-front
fi
if [ "${iTM2_Debug}" != "0" ]
then
	"${iTM2_CMD_Notify}" notify comment "$0 complete."
fi
popd
exit 0
