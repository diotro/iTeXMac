#!/bin/bash -f
# Note that this seems to be bash since 10.2.6
# this is iTM2_Launch for iTeXMac2 2.0
# Â© 2005 jlaurens@users.sourceforge.net
# setting the link
# iTM2_Lauch "command with arguments"
# this should be called at least each time a project is open
# preferrably each time we execute something against a project
# this script does not care about the file extension!
# this script should live in $iTM2_HOME/Library/TeX/bin/iTeXMac2.app/Contents/Frameworks/iTM2TeXFoundation.framework/bin/iTM2_Launch
# The purpose is to create shortcuts to standard location where iTeXMac2 expects to find bins.
# long names and spaces problems are solved here.
#
#iTM2_CMD_Notify comment "iTM2: STARTING $0"
date "+START - DATE: %m/%d/%y%nTIME: %H:%M:%S"
iTM2_LAUNCH_VERSION=1
if ! [ -w "${iTM2_Device}" ]
then
    iTM2_Device="/dev/null"
fi
"${iTM2_CMD_Notify}" echo "<iTM2TaskStarted/>"
iTM2SHORT="0"
iTM2BinaryPATH=""
iTM2Link ()
{
	iTM2_TARGET="${iTM2BinaryPATH}/$iTM2SHORT"
    rm -Rf "$iTM2_TARGET"
    if ( [ -d "$1" ] ) && ( [ -d "$1/bin" ] )
    then
		ln -s "$1" "${iTM2_TARGET}"
		iTM2PREFIX="$iTM2PREFIX:$iTM2_TARGET/bin";
		iTM2SHORT=`expr $iTM2SHORT + 1`
    fi
}
"${iTM2_CMD_Notify}" comment "Welcome to iTeXMac2 launch utility version ${iTM2_LAUNCH_VERSION}"
if [ "${TWSMaster}" == "" ]
then
    "${iTM2_CMD_Notify}" error "Undefined TWSMaster in $0
You MUST specify a master document, from the project settings panel
Here are the environment variables
`printenv`
Are they what was expected?"
    exit 1
fi
# the specific environment:
if [ "${iTM2_Debug:-0}" != "0" ]
then
	"${iTM2_CMD_Notify}" start comment
    "${iTM2_CMD_Notify}" echo "The $0 specific environment is:"
	for iTM2VAR in ${!iTM2*}
	do
		"${iTM2_CMD_Notify}" echo "${iTM2VAR} is: ${!iTM2VAR}"
	done
	"${iTM2_CMD_Notify}" stop comment
fi
# the binary path:
if ! [ -d "${TWSProjectDirectory}" ]
then
	"${iTM2_CMD_Notify}" error "Missing directory at path: {${iTM2ProjectDirectory}}, do not expect a correct behaviour."
fi
iTM2PROJECT="$TWSProjectDirectory/$TWSProjectName"
if [ -d "${iTM2PROJECT}" ]
then
	cd "`dirname "${iTM2PROJECT}"`"
	iTM2BinaryPATH="`basename "${iTM2PROJECT}"`/.iTM2"
	if [ ! -w "${iTM2PROJECT}" ]
	then
		"${iTM2_CMD_Notify}" error "Project MUST BE writable (${iTM2PROJECT})"
		exit -1
	fi
	rm -Rf "${iTM2BinaryPATH}"
	mkdir "${iTM2BinaryPATH}"
	chmod -R a+rwx "${iTM2BinaryPATH}"
	if [ ! -d "${iTM2BinaryPATH}" ]
	then
		iTM2BinaryPATH=".iTM2"
		rm -Rf "${iTM2BinaryPATH}"
		mkdir "${iTM2BinaryPATH}"
		chmod -R a+rwx "${iTM2BinaryPATH}"
	fi
else
    "${iTM2_CMD_Notify}" warning "Undefined project in $0, using the invisible folder named $PWD/.iTM2"
	iTM2PROJECT=""
	iTM2BinaryPATH=".iTM2"
	rm -Rf "${iTM2BinaryPATH}"
	mkdir "${iTM2BinaryPATH}"
	chmod -R a+rwx "${iTM2BinaryPATH}"
fi
chmod -R a+rwx "${iTM2BinaryPATH}"
if [ ! -w "${PWD}" ]
then
	"${iTM2_CMD_Notify}" error "Current folder is not writable:
$PWD,
copy your source in a writable location"
	exit -1
fi
iTM2PREFIX=".:${iTM2BinaryPATH}"
iTM2SHORT="0"
iTM2Link "${iTM2_HOME}/Library/TeX"
iTM2Link "${iTM2_HOME}/Library/Application Support/iTeXMac2"
if [ ${#iTM2_TemporaryDirectory} -gt 0 ]
then
	iTM2Link "${iTM2_TemporaryDirectory}"
fi
iTM2Link "/Library/TeX"
iTM2Link "/Library/Application Support/iTeXMac2"
if [ ${#iTM2UseNetwork} -gt 0 ]
then
	iTM2Link "/Network/Library/TeX"
	iTM2Link "/Network/Library/Application Support/iTeXMac2"
fi
iTM2_BUILTIN_EXECUTABLE_PATH="`dirname "$0"`"
iTM2Link "`dirname "$iTM2_BUILTIN_EXECUTABLE_PATH"`"
# Now we are setting the PATH variable
if [ ${#iTM2PREFIX} -gt 0 ]
then
    PATH="$iTM2PREFIX:$PATH"
fi
if [ ${iTM2_Debug:-0} -gt 0 ]
then
	"${iTM2_CMD_Notify}" comment "PATH is {$PATH}"
fi
# Then, let us transform scripts stored into environment variables into real shell scripts.
for iTM2SCRIPT in ${!iTM2_ShellScript_*}
do
	iTM2NAME="iTM2_${iTM2SCRIPT#iTM2_ShellScript_}"
	echo "${!iTM2SCRIPT}" > "${iTM2BinaryPATH}/${iTM2NAME}"
	chmod u+x "${iTM2BinaryPATH}/${iTM2NAME}"
	eval "${iTM2SCRIPT}=\"customized\""
	if [ ${iTM2_Debug:-0} -gt 0 ]
	then
		"${iTM2_CMD_Notify}" comment "customized script ${iTM2SCRIPT}: {`which ${iTM2NAME}`}"
	fi
done
if [ ${iTM2_Debug:-0} -gt 0 ]
then
	"${iTM2_CMD_Notify}" comment "The environment is:
`printenv`
The binaries are (${iTM2BinaryPATH}):
`ls -al "${iTM2BinaryPATH}"`"
fi
#"${iTM2_CMD_Notify}" comment "##### DIAGNOSTIC"
#printenv
#which ls
#which iTeXMac2
#which iTM2_Launch
#"${iTM2_CMD_Notify}" comment "##### DIAGNOSTIC"
if [ $# -gt 0 ]
then
    iTM2Command="$1"
    iTM2IndirectCommand="iTM2_${iTM2Command}"
    iTM2WrappedCommand="${!iTM2IndirectCommand}"
    iTM2CommandPath="`which "${iTM2WrappedCommand}"`"
echo "the iTM2CommandPath is: ${iTM2CommandPath}"
    if [ ! -x "${iTM2CommandPath}" ]
	then
echo "iTM2Command is: $iTM2Command"
echo "iTM2IndirectCommand is: $iTM2IndirectCommand"
echo "iTM2WrappedCommand is: $iTM2WrappedCommand"
		oldIFS="$IFS"
		IFS=":"
		for COMPONENT in ${PATH}; do
			echo "the component is \"${COMPONENT}\""
			if [ ${#COMPONENT} -gt 0 ]
			then
				iTM2CommandPath="${COMPONENT}/${iTM2WrappedCommand}"
				if [ -x "${iTM2CommandPath}" ]
				then
					break
				else
					iTM2CommandPath=""
				fi
			fi
		done
	fi
	if [ ${#iTM2CommandPath} -gt 0 ]
	then
		if [ "${iTM2_RunSilently:-0}" = "0" ]
		then
				"${iTM2_CMD_Notify}" comment "running ${iTM2Command} (${iTM2WrappedCommand})"
		fi
		"${iTM2CommandPath}"
		status=$?
	else
		IFS="${oldIFS}"
		"${iTM2_CMD_Notify}" start error
		"${iTM2_CMD_Notify}" echo "No \"${iTM2Command}\" command is available neither built in nor customized"
		"${iTM2_CMD_Notify}" echo "iTM2Command is \"${iTM2Command}\""
		"${iTM2_CMD_Notify}" echo "iTM2IndirectCommand is \"${iTM2IndirectCommand}\""
		"${iTM2_CMD_Notify}" echo "iTM2WrappedCommand is \"${iTM2WrappedCommand}\""
		"${iTM2_CMD_Notify}" stop error
		status="1"
		if [ "${iTM2_RunSilently:-0}" = "0" ]
		then
				"${iTM2_CMD_Notify}" error "the launch utility ends with `basename "$1"` Failed ($status)"
		fi
		exit 1
	fi
date "+END - DATE: %m/%d/%y%nTIME: %H:%M:%S"
    if [ "$status" = "0" ]
    then
        if [ "${iTM2_RunSilently:-0}" = "0" ]
        then
                "${iTM2_CMD_Notify}" comment "the launch utility ends with `basename "$1"` Complete"
        fi
        exit 0
    else
        if [ "${iTM2_RunSilently:-0}" = "0" ]
        then
                "${iTM2_CMD_Notify}" error "the launch utility ends with `basename "$1"` Failed ($status)"
        fi
        exit 1
    fi
else
	exit 2
fi
